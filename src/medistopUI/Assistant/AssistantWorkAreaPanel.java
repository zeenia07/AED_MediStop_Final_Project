/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medistopUI.Assistant;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import medistopBackend.EcoSystem;
import medistopBackend.Employee.Employee;
import medistopBackend.Enterprise.Enterprise;
import medistopBackend.Hospital.Appointment.AppointmentDetails;
import medistopBackend.Hospital.Organisation.HospitalOrganisationAssistant;
import medistopBackend.Network.Network;
import medistopBackend.Organisation.Organisation;
import medistopBackend.UserAccount.UserAccount;
import medistopBackend.WorkQueue.AssistantAddingTimingsWorkQueue;
import medistopBackend.WorkQueue.DoctorAssistantAccountingWorkQueue;
import medistopBackend.WorkQueue.HospitalFundsRequestWorkQueue;
import medistopBackend.WorkQueue.PatientBookingWorkQueue;
import medistopBackend.WorkQueue.ReceivedFundWorkRequest;
import medistopBackend.WorkQueue.WorkRequest;

/**
 *
 * @author Zeenia
 */
public class AssistantWorkAreaPanel extends javax.swing.JPanel {

    private JPanel displayJPanel;
    private UserAccount ua;
    private Enterprise enterprise;
    private EcoSystem ecosystem;
    private UserAccount userAccount;
    private Network network;
    private HospitalOrganisationAssistant hospitalAssistant;
    private AssistantAddingTimingsWorkQueue assistantAddSlot;
    
    /**
     * Creates new form AssistantWorkAreaPanel
     */
    public AssistantWorkAreaPanel(JPanel dispJPanel, UserAccount account, HospitalOrganisationAssistant organisation, Enterprise enterprise,EcoSystem system) {
        initComponents();
        this.displayJPanel = dispJPanel;
        this.ua = account;
        this.hospitalAssistant = organisation;
        this.enterprise = enterprise;
        this.ecosystem = system;
        this.userAccount = account;
        lblAssistantName.setText(userAccount.getUsername());
        populateAppointmentTable();
        populateAcknowledgmentTable();
        
    }
    
    public AssistantWorkAreaPanel(JPanel dispJPanel, UserAccount account, HospitalOrganisationAssistant organisation, Enterprise enterprise,Network net,EcoSystem system) {
        initComponents();
        this.displayJPanel = dispJPanel;
        this.ua = account;
        this.hospitalAssistant = organisation;
        this.enterprise = enterprise;
        this.ecosystem = system;
        this.network = net;
        populateFundingRequestsTable();
        populateComboDoctor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        donationTabbedPane = new javax.swing.JTabbedPane();
        manageDocSlotsPanel = new javax.swing.JPanel();
        menuItemName6 = new javax.swing.JLabel();
        deliveryDirLabel5 = new javax.swing.JLabel();
        btnAddSlot = new javax.swing.JButton();
        comboManageSlots = new javax.swing.JComboBox();
        menuItemName12 = new javax.swing.JLabel();
        comboDay = new javax.swing.JComboBox();
        comboMonth = new javax.swing.JComboBox();
        comboYear = new javax.swing.JComboBox();
        lblWelcome = new javax.swing.JLabel();
        lblAssistantName = new javax.swing.JLabel();
        manageFundingRequestsPanel = new javax.swing.JPanel();
        helpTextLabel1 = new javax.swing.JLabel();
        deliveryDirLabel8 = new javax.swing.JLabel();
        menuItemName14 = new javax.swing.JLabel();
        txtFundReqd = new javax.swing.JTextField();
        btnRaiseFundingRequest = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFundingRequests = new javax.swing.JTable();
        lblWelcome1 = new javax.swing.JLabel();
        lblAssistantName1 = new javax.swing.JLabel();
        fundingAcknowledgementPanel = new javax.swing.JPanel();
        deliveryDirLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAcknowledgement = new javax.swing.JTable();
        lblWelcome2 = new javax.swing.JLabel();
        lblAssistantName2 = new javax.swing.JLabel();
        manageAppointmentsPanel = new javax.swing.JPanel();
        helpTextLabel = new javax.swing.JLabel();
        deliveryDirLabel7 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        btnReject = new javax.swing.JButton();
        lblWelcome3 = new javax.swing.JLabel();
        lblAssistantName3 = new javax.swing.JLabel();

        donationTabbedPane.setForeground(new java.awt.Color(0, 0, 102));
        donationTabbedPane.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        menuItemName6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName6.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName6.setText("Doctor Name:");

        deliveryDirLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        deliveryDirLabel5.setForeground(new java.awt.Color(255, 51, 51));
        deliveryDirLabel5.setText("ASSISTANT WORK AREA");

        btnAddSlot.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnAddSlot.setForeground(new java.awt.Color(0, 0, 102));
        btnAddSlot.setText("Add Slot Available");
        btnAddSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSlotActionPerformed(evt);
            }
        });

        menuItemName12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName12.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName12.setText("Date:");

        comboDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonthActionPerformed(evt);
            }
        });

        comboYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2021", "2022", "2023" }));
        comboYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboYearActionPerformed(evt);
            }
        });

        lblWelcome.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(0, 0, 102));
        lblWelcome.setText("Welcome ");

        lblAssistantName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblAssistantName.setText("value");

        javax.swing.GroupLayout manageDocSlotsPanelLayout = new javax.swing.GroupLayout(manageDocSlotsPanel);
        manageDocSlotsPanel.setLayout(manageDocSlotsPanelLayout);
        manageDocSlotsPanelLayout.setHorizontalGroup(
            manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                .addGroup(manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(btnAddSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(deliveryDirLabel5))
                    .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addGroup(manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                                .addComponent(menuItemName6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboManageSlots, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(menuItemName12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblWelcome)
                        .addGap(18, 18, 18)
                        .addComponent(lblAssistantName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(604, Short.MAX_VALUE))
        );
        manageDocSlotsPanelLayout.setVerticalGroup(
            manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDocSlotsPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(deliveryDirLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(lblAssistantName))
                .addGap(59, 59, 59)
                .addGroup(manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuItemName6)
                    .addComponent(comboManageSlots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(manageDocSlotsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuItemName12)
                    .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(112, 112, 112)
                .addComponent(btnAddSlot)
                .addContainerGap(605, Short.MAX_VALUE))
        );

        donationTabbedPane.addTab("Manage Doctor Slots", manageDocSlotsPanel);

        helpTextLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        helpTextLabel1.setForeground(new java.awt.Color(0, 0, 102));
        helpTextLabel1.setText(" ");

        deliveryDirLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        deliveryDirLabel8.setForeground(new java.awt.Color(255, 51, 51));
        deliveryDirLabel8.setText("ASSISTANT WORK AREA");

        menuItemName14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName14.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName14.setText("Funding Required:");

        btnRaiseFundingRequest.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnRaiseFundingRequest.setForeground(new java.awt.Color(0, 0, 102));
        btnRaiseFundingRequest.setText("Raise Funding Request");
        btnRaiseFundingRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseFundingRequestActionPerformed(evt);
            }
        });

        tblFundingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Prescription", "Funding Required", "Funding Approved"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblFundingRequests);

        lblWelcome1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblWelcome1.setForeground(new java.awt.Color(0, 0, 102));
        lblWelcome1.setText("Welcome ");

        lblAssistantName1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblAssistantName1.setText("value");

        javax.swing.GroupLayout manageFundingRequestsPanelLayout = new javax.swing.GroupLayout(manageFundingRequestsPanel);
        manageFundingRequestsPanel.setLayout(manageFundingRequestsPanelLayout);
        manageFundingRequestsPanelLayout.setHorizontalGroup(
            manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                .addGroup(manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                                .addComponent(helpTextLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))
                            .addComponent(deliveryDirLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(menuItemName14, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFundReqd, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(btnRaiseFundingRequest))
                    .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblWelcome1)
                        .addGap(18, 18, 18)
                        .addComponent(lblAssistantName1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        manageFundingRequestsPanelLayout.setVerticalGroup(
            manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageFundingRequestsPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(deliveryDirLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome1)
                    .addComponent(lblAssistantName1))
                .addGap(49, 49, 49)
                .addComponent(helpTextLabel1)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(manageFundingRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuItemName14)
                    .addComponent(txtFundReqd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnRaiseFundingRequest)
                .addContainerGap(573, Short.MAX_VALUE))
        );

        donationTabbedPane.addTab("Funding Requests", manageFundingRequestsPanel);

        deliveryDirLabel11.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        deliveryDirLabel11.setForeground(new java.awt.Color(255, 51, 51));
        deliveryDirLabel11.setText("ASSISTANT WORK AREA");

        tblAcknowledgement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient", "Date Acknowledged", "Charity", "Charity Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblAcknowledgement);

        lblWelcome2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblWelcome2.setForeground(new java.awt.Color(0, 0, 102));
        lblWelcome2.setText("Welcome ");

        lblAssistantName2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblAssistantName2.setText("value");

        javax.swing.GroupLayout fundingAcknowledgementPanelLayout = new javax.swing.GroupLayout(fundingAcknowledgementPanel);
        fundingAcknowledgementPanel.setLayout(fundingAcknowledgementPanelLayout);
        fundingAcknowledgementPanelLayout.setHorizontalGroup(
            fundingAcknowledgementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundingAcknowledgementPanelLayout.createSequentialGroup()
                .addGroup(fundingAcknowledgementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fundingAcknowledgementPanelLayout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(deliveryDirLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundingAcknowledgementPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblWelcome2)
                        .addGap(18, 18, 18)
                        .addComponent(lblAssistantName2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundingAcknowledgementPanelLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(521, Short.MAX_VALUE))
        );
        fundingAcknowledgementPanelLayout.setVerticalGroup(
            fundingAcknowledgementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundingAcknowledgementPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(deliveryDirLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(fundingAcknowledgementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome2)
                    .addComponent(lblAssistantName2))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(617, Short.MAX_VALUE))
        );

        donationTabbedPane.addTab(" Acknowledgments", fundingAcknowledgementPanel);

        helpTextLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        helpTextLabel.setForeground(new java.awt.Color(0, 0, 102));
        helpTextLabel.setText(" ");

        deliveryDirLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        deliveryDirLabel7.setForeground(new java.awt.Color(255, 51, 51));
        deliveryDirLabel7.setText("ASSISTANT WORK AREA");

        btnAccept.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnAccept.setForeground(new java.awt.Color(0, 0, 102));
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient ID", "Appointment Details", "Type Of Consultation", "Doctor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAppointment);

        btnReject.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnReject.setForeground(new java.awt.Color(0, 0, 102));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        lblWelcome3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblWelcome3.setForeground(new java.awt.Color(0, 0, 102));
        lblWelcome3.setText("Welcome ");

        lblAssistantName3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblAssistantName3.setText("value");

        javax.swing.GroupLayout manageAppointmentsPanelLayout = new javax.swing.GroupLayout(manageAppointmentsPanel);
        manageAppointmentsPanel.setLayout(manageAppointmentsPanelLayout);
        manageAppointmentsPanelLayout.setHorizontalGroup(
            manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                .addGroup(manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deliveryDirLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                                .addComponent(helpTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))))
                    .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                                .addGap(272, 272, 272)
                                .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                                .addComponent(lblWelcome3)
                                .addGap(18, 18, 18)
                                .addComponent(lblAssistantName3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        manageAppointmentsPanelLayout.setVerticalGroup(
            manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageAppointmentsPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(deliveryDirLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome3)
                    .addComponent(lblAssistantName3))
                .addGap(51, 51, 51)
                .addComponent(helpTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(manageAppointmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnReject))
                .addContainerGap(580, Short.MAX_VALUE))
        );

        donationTabbedPane.addTab("Manage Appointments", manageAppointmentsPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(donationTabbedPane)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(donationTabbedPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1334, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1079, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSlotActionPerformed
        // TODO add your handling code here:
        String day,month,year;
        
           day = (String)comboDay.getSelectedItem();
           month = (String)comboMonth.getSelectedItem();
           year = (String)comboYear.getSelectedItem();
           
           int d = Integer.parseInt(day);
           int m = Integer.parseInt(month);
           int y = Integer.parseInt(year);
           
           assistantAddSlot = new AssistantAddingTimingsWorkQueue();
           
           assistantAddSlot.setTimings(new  Date(y-1900,m-1, d));
           for(Network net : ecosystem.getNetworkList())
           {
               for(Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList())
               {
                   if(ent.getName().equalsIgnoreCase(enterprise.getName()))
                   {
                       assistantAddSlot.setCity(net.getNetworkName());
                   }
               }
           }
           Employee e = new Employee();
           e = (Employee)comboManageSlots.getSelectedItem();
           
           assistantAddSlot.setDoctor(e.getEmployeeName());
           assistantAddSlot.setSender(userAccount);
           assistantAddSlot.setStatus("Available");
           assistantAddSlot.setMessage("Available slots");
           assistantAddSlot.setHospitalName(enterprise.getName());
           assistantAddSlot.setCity(network.getNetworkName());
           ecosystem.getPatientDir().getWorkQueue().getWorkRequestList().add(assistantAddSlot);
           userAccount.getWorkQueue().getWorkRequestList().add(assistantAddSlot);
            
           JOptionPane.showMessageDialog(null, "Doctor's  available slot added successfully!!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAddSlotActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblAppointment.getSelectedRow();
            if(selectedRow>0)
            {
                PatientBookingWorkQueue patientBooking = (PatientBookingWorkQueue)tblAppointment.getValueAt(selectedRow, 0);
                
                if(patientBooking.getStatus().equals("Approved"))
                {
                    JOptionPane.showMessageDialog(null,"Patient appointment already approved!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else if(patientBooking.getStatus().equals("Rejected"))
                {
                    JOptionPane.showMessageDialog(null,"Patient appointment already rejected!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                
                else
                {
                    patientBooking.setStatus("Approved");
                    populateAppointmentTable();
                    AppointmentDetails appointment = ecosystem.getAppointmentDirectory().createAppointment();
                    appointment.setCityOfTreated(patientBooking.getCity());
                    appointment.setDoctorName(patientBooking.getDoctor());
                    appointment.setHospitalName(patientBooking.getHospitalName());
                    appointment.setPatient(patientBooking.getPatient());
                    appointment.setDate(new Date());
                
                    JOptionPane.showMessageDialog(null, "Patient Appointment Approved!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            else
            {
                JOptionPane.showMessageDialog(null, "Please select a patient record first!","Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnAcceptActionPerformed
    }
    
    private void btnRaiseFundingRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseFundingRequestActionPerformed
        // TODO add your handling code here:
         try{
         int selectedRow = tblFundingRequests.getSelectedRow();
         
         if(selectedRow>0)
            {
                DoctorAssistantAccountingWorkQueue  assistantAccounting = (DoctorAssistantAccountingWorkQueue)tblFundingRequests.getValueAt(selectedRow, 0);
                HospitalFundsRequestWorkQueue fundsRequest = new HospitalFundsRequestWorkQueue();
                
                fundsRequest.setSender(ua);
                fundsRequest.setAmount(Float.parseFloat(txtFundReqd.getText()));
                fundsRequest.setHospitalName(enterprise.getName());
                fundsRequest.setMessage("Sponsorship Required");
                fundsRequest.setPatientName(assistantAccounting.getApd().getPatient().getPatientName());
                fundsRequest.setCity(network.getNetworkName());
                fundsRequest.setStatus("No");
                
                for(Network network : ecosystem.getNetworkList())
                {
                    if(network.getNetworkName().equals(this.network.getNetworkName()))
                    {
                            assistantAccounting.setMessage("Sent");
                            network.getFundsRequests().getWorkRequestList().add(fundsRequest);
                            ua.getWorkQueue().getWorkRequestList().add(fundsRequest);
                            
                        JOptionPane.showMessageDialog(null, "Posted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        break;
                }
                }
                txtFundReqd.setText("");
            }
        
            else
            {
                JOptionPane.showMessageDialog(null, "Please select a patient to proceed!","Warning", JOptionPane.WARNING_MESSAGE);
                    }
         }
            catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Please enter proper values!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRaiseFundingRequestActionPerformed

    private void comboYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboYearActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblAppointment.getSelectedRow();
         if(selectedRow>0)
            {
                PatientBookingWorkQueue patientBooking = (PatientBookingWorkQueue)tblAppointment.getValueAt(selectedRow, 0);
                
                if(patientBooking.getStatus().equals("Approved"))
                {
                    JOptionPane.showMessageDialog(null,"Patient appointment already approved!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else if(patientBooking.getStatus().equals("Rejected"))
                {
                    JOptionPane.showMessageDialog(null,"Patient appointment already rejected!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else
                {
                    patientBooking.setStatus("Rejected");
                    populateAppointmentTable();
                    JOptionPane.showMessageDialog(null, "Patient Appointment Approved!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
              
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please Select any Patient appointment to proceed","Warning", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void comboMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMonthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAddSlot;
    private javax.swing.JButton btnRaiseFundingRequest;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox comboDay;
    private javax.swing.JComboBox comboManageSlots;
    private javax.swing.JComboBox comboMonth;
    private javax.swing.JComboBox comboYear;
    private javax.swing.JLabel deliveryDirLabel11;
    private javax.swing.JLabel deliveryDirLabel5;
    private javax.swing.JLabel deliveryDirLabel7;
    private javax.swing.JLabel deliveryDirLabel8;
    private javax.swing.JTabbedPane donationTabbedPane;
    private javax.swing.JPanel fundingAcknowledgementPanel;
    private javax.swing.JLabel helpTextLabel;
    private javax.swing.JLabel helpTextLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAssistantName;
    private javax.swing.JLabel lblAssistantName1;
    private javax.swing.JLabel lblAssistantName2;
    private javax.swing.JLabel lblAssistantName3;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblWelcome1;
    private javax.swing.JLabel lblWelcome2;
    private javax.swing.JLabel lblWelcome3;
    private javax.swing.JPanel manageAppointmentsPanel;
    private javax.swing.JPanel manageDocSlotsPanel;
    private javax.swing.JPanel manageFundingRequestsPanel;
    private javax.swing.JLabel menuItemName12;
    private javax.swing.JLabel menuItemName14;
    private javax.swing.JLabel menuItemName6;
    private javax.swing.JTable tblAcknowledgement;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblFundingRequests;
    private javax.swing.JTextField txtFundReqd;
    // End of variables declaration//GEN-END:variables

    
//To populate appointment table
public void populateAppointmentTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblAppointment.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : hospitalAssistant.getIncomingPatients().getWorkRequestList())
        {
            PatientBookingWorkQueue patient = new PatientBookingWorkQueue();
            patient = (PatientBookingWorkQueue)request;
            Object[] row = new Object[5];
            row[0] = patient;
            row[1] = patient.getPatient().getPatientId();
            row[2] = patient.getMessage();
            row[3] = patient.getSender();
            row[4] = request.getStatus();
            
            model.addRow(row);
        }          
    }

//To populate funding acknowledgment table
 public void populateAcknowledgmentTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblAcknowledgement.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : hospitalAssistant.getFundsReceived().getWorkRequestList())
            {
                ReceivedFundWorkRequest t = new ReceivedFundWorkRequest();
                t = (ReceivedFundWorkRequest)request;
                
                if(enterprise.getName().equalsIgnoreCase(t.getHospitalName()))
                {
                    Object[] row = new Object[4];
                    row[0] = t;
                    row[1] = t.getDateReceived();
                    row[2] = t.getFunderName();
                    row[3] = t.getCity();
            
                    model.addRow(row);
                }
            }
    }
 
//To populate funding request table
public void populateFundingRequestsTable(){
    DefaultTableModel model = (DefaultTableModel) tblFundingRequests.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : hospitalAssistant.getFundApplicationQueue().getWorkRequestList())
            {
                DoctorAssistantAccountingWorkQueue accounting = new DoctorAssistantAccountingWorkQueue();
                accounting = (DoctorAssistantAccountingWorkQueue)request;
                Object[] row = new Object[4];
                row[0] = accounting;
                row[1] = accounting.getPrescribed();
                row[2] = accounting.isFundingRequired();
                row[3] = accounting.isFundingApproved();
            
                model.addRow(row);
            }  
}

public void populateComboDoctor(){
    comboManageSlots.removeAllItems();
        for(Organisation o : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(o.getName().equals("Doctor Organisation"))
            {
                for(Employee e: o.getEmployeeDirectory().getEmployeeDirectory())
                {
                    comboManageSlots.addItem(e);
                }
            }
        }
}
}
