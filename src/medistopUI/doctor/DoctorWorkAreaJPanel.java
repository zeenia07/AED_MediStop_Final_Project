/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medistopUI.doctor;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import medistopBackend.EcoSystem;
import medistopBackend.Enterprise.Enterprise;
import medistopBackend.Hospital.Appointment.AppointmentDetails;
import medistopBackend.Hospital.Organisation.HospitalOrganisationAssistant;
import medistopBackend.Hospital.Organisation.HospitalOrganisationAttendant;
import medistopBackend.Hospital.Organisation.HospitalOrganisationDoctor;
import medistopBackend.Organisation.Organisation;
import medistopBackend.UserAccount.UserAccount;
import medistopBackend.WorkQueue.DoctorAssistantAccountingWorkQueue;
import medistopBackend.WorkQueue.DoctorAttendentWorkQueue;

/**
 *
 * @author Zeenia
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    
    private EcoSystem ecosystem;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalOrganisationDoctor docOrganisation;
    private AppointmentDetails appointment;
    private JPanel displayJPanel;
    
    public DoctorWorkAreaJPanel() {
        initComponents();
    }

    public DoctorWorkAreaJPanel(JPanel displayJPanel,UserAccount userAccount ,HospitalOrganisationDoctor docOrganisation, Enterprise enterprise, EcoSystem ecosystem) 
    {
        initComponents();
        this.displayJPanel = displayJPanel;
        this.userAccount = userAccount;
        valuePatientName.setText(userAccount.getUsername());
        this.docOrganisation = docOrganisation;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        
        populateForm();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        valuePatientName = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblPatientName1 = new javax.swing.JLabel();
        lblPatientsWaiting = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDOB = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        lblBloodGroup = new javax.swing.JLabel();
        txtBloodGroup = new javax.swing.JTextField();
        lblDisease = new javax.swing.JLabel();
        txtDisease = new javax.swing.JTextField();
        lblPrescription = new javax.swing.JLabel();
        txtPrescription = new javax.swing.JTextField();
        menuItemName5 = new javax.swing.JLabel();
        RadioBloodYes = new javax.swing.JRadioButton();
        RadioBloodNo = new javax.swing.JRadioButton();
        menuItemName6 = new javax.swing.JLabel();
        RadioFundsYes = new javax.swing.JRadioButton();
        RadioFundsNo = new javax.swing.JRadioButton();
        btnAddPrescription = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblWelcome.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(0, 0, 102));
        lblWelcome.setText("Welcome ");

        valuePatientName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        valuePatientName.setText("value");

        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(0, 0, 102));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medistopUI.images/2966327.png"))); // NOI18N

        lblPatientName1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientName1.setForeground(new java.awt.Color(0, 0, 102));
        lblPatientName1.setText("Patients Waiting:");

        jPanel5.setBackground(new java.awt.Color(102, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));

        lblPatientName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientName.setForeground(new java.awt.Color(0, 0, 102));
        lblPatientName.setText("Patient Name:");

        txtPatientName.setEditable(false);
        txtPatientName.setForeground(new java.awt.Color(0, 0, 102));
        txtPatientName.setText(" ");

        lblDOB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDOB.setForeground(new java.awt.Color(0, 0, 102));
        lblDOB.setText("Date of Birth:");

        txtDOB.setEditable(false);
        txtDOB.setForeground(new java.awt.Color(0, 0, 102));
        txtDOB.setText(" ");
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        lblBloodGroup.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBloodGroup.setForeground(new java.awt.Color(0, 0, 102));
        lblBloodGroup.setText("Blood Group:");

        txtBloodGroup.setForeground(new java.awt.Color(0, 0, 102));
        txtBloodGroup.setText(" ");

        lblDisease.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDisease.setForeground(new java.awt.Color(0, 0, 102));
        lblDisease.setText("Disease:");

        txtDisease.setForeground(new java.awt.Color(0, 0, 102));
        txtDisease.setText(" ");
        txtDisease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiseaseActionPerformed(evt);
            }
        });

        lblPrescription.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPrescription.setForeground(new java.awt.Color(0, 0, 102));
        lblPrescription.setText("Prescription:");

        txtPrescription.setForeground(new java.awt.Color(0, 0, 102));
        txtPrescription.setText(" ");

        menuItemName5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName5.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName5.setText("Blood Required:");

        RadioBloodYes.setText("Yes");
        RadioBloodYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioBloodYesActionPerformed(evt);
            }
        });

        RadioBloodNo.setText("No");
        RadioBloodNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioBloodNoActionPerformed(evt);
            }
        });

        menuItemName6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName6.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName6.setText("Funds Required:");

        RadioFundsYes.setText("Yes");
        RadioFundsYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioFundsYesActionPerformed(evt);
            }
        });

        RadioFundsNo.setText("No");
        RadioFundsNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioFundsNoActionPerformed(evt);
            }
        });

        btnAddPrescription.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        btnAddPrescription.setForeground(new java.awt.Color(0, 0, 102));
        btnAddPrescription.setText("Add Prescription");
        btnAddPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPrescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(lblBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(lblPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(txtPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblDisease, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(txtDisease, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(menuItemName6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(64, 64, 64)
                                    .addComponent(RadioFundsYes)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RadioFundsNo))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(menuItemName5, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addGap(259, 259, 259)
                                            .addComponent(RadioBloodYes)))
                                    .addGap(26, 26, 26)
                                    .addComponent(RadioBloodNo)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(btnAddPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOB)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodGroup)
                    .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDisease)
                    .addComponent(txtDisease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrescription)
                    .addComponent(txtPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuItemName5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RadioBloodYes)
                        .addComponent(RadioBloodNo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(menuItemName6)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RadioFundsYes)
                        .addComponent(RadioFundsNo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnAddPrescription)
                .addContainerGap())
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medistopUI.images/doctor.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblWelcome)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valuePatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(180, 180, 180)
                                        .addComponent(lblPatientsWaiting))
                                    .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(104, 104, 104)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jLabel2)
                                .addGap(294, 294, 294))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(60, 60, 60))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblWelcome)
                                .addComponent(valuePatientName)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(273, 273, 273)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lblPatientName1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(lblPatientsWaiting))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void txtDiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiseaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiseaseActionPerformed

    private void RadioBloodYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioBloodYesActionPerformed
        RadioBloodNo.setSelected(false);
    }//GEN-LAST:event_RadioBloodYesActionPerformed

    private void RadioBloodNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioBloodNoActionPerformed
        RadioBloodYes.setSelected(false);
    }//GEN-LAST:event_RadioBloodNoActionPerformed

    private void RadioFundsYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioFundsYesActionPerformed
        // TODO add your handling code here:
        RadioFundsYes.setSelected(false);

    }//GEN-LAST:event_RadioFundsYesActionPerformed

    private void RadioFundsNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioFundsNoActionPerformed
        // TODO add your handling code here:
         RadioFundsNo.setSelected(false);
    }//GEN-LAST:event_RadioFundsNoActionPerformed

    private void btnAddPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPrescriptionActionPerformed
        // TODO add your handling code here:
         appointment.setDiseases(txtDisease.getText());
                appointment.setPrescription(txtPrescription.getText());
                boolean bloodRequired = isBloodRequired();
                boolean donationRequired = isDonationRequired();
                appointment.setisappointmentTaken(true);
                appointment.setIsBloodNeeded(bloodRequired);
                appointment.setIsFundNeeded(donationRequired);
                
                DoctorAttendentWorkQueue attendantWorkQueue = new DoctorAttendentWorkQueue();
                DoctorAssistantAccountingWorkQueue assistantWorkQueue = new DoctorAssistantAccountingWorkQueue();
                
                attendantWorkQueue.setAppointmentDetails(appointment);
                attendantWorkQueue.setSender(userAccount);
                attendantWorkQueue.setMessage("Prescribed");
                assistantWorkQueue.setApd(appointment);
                assistantWorkQueue.setFundingRequired(donationRequired);
                assistantWorkQueue.setFundingApproved(false);
                assistantWorkQueue.setPrescribed(txtPrescription.getText());
                HospitalOrganisationAttendant orgAttendant = null;
                JOptionPane.showMessageDialog(null, "Prescription updated successfully!!","Success", JOptionPane.INFORMATION_MESSAGE);
        
        for (Organisation organisation : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organisation instanceof HospitalOrganisationAttendant){
                orgAttendant = (HospitalOrganisationAttendant)organisation;
                break;
            }
        }
        if (orgAttendant!=null && appointment.isIsBloodNeeded() == true){
            orgAttendant.getDoctorAttendantWQ().getWorkRequestList().add(attendantWorkQueue);
            userAccount.getWorkQueue().getWorkRequestList().add(attendantWorkQueue);
        }
        HospitalOrganisationAssistant orgAssistant = null;
        for (Organisation organisation : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organisation instanceof HospitalOrganisationAssistant){
                orgAssistant = (HospitalOrganisationAssistant)organisation;
                break;
            }
        }
        if (orgAssistant!=null && appointment.isFundNeeded() == true){
            orgAssistant.getFundApplicationQueue().getWorkRequestList().add(assistantWorkQueue);
            userAccount.getWorkQueue().getWorkRequestList().add(assistantWorkQueue);
        }
        
        //--->Resetting form fields
        
                resetFields();
                
                populateForm();
                

    }//GEN-LAST:event_btnAddPrescriptionActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        resetFields();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RadioBloodNo;
    private javax.swing.JRadioButton RadioBloodYes;
    private javax.swing.JRadioButton RadioFundsNo;
    private javax.swing.JRadioButton RadioFundsYes;
    private javax.swing.JButton btnAddPrescription;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDisease;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientName1;
    private javax.swing.JLabel lblPatientsWaiting;
    private javax.swing.JLabel lblPrescription;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel menuItemName5;
    private javax.swing.JLabel menuItemName6;
    private javax.swing.JTextField txtBloodGroup;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtDisease;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPrescription;
    private javax.swing.JLabel valuePatientName;
    // End of variables declaration//GEN-END:variables

public void populateForm()
    {
        for(AppointmentDetails appointment : ecosystem.getAppointmentDirectory().getAppointmentDirectory())
        {
            if(appointment.isisappointmentTaken() != true)
            {
                this.appointment = appointment;
                txtPatientName.setText(appointment.getPatient().getPatientName());
                txtDOB.setText(String.valueOf(appointment.getPatient().getDateOfBirth()));
                txtBloodGroup.setText(appointment.getPatient().getBloodGroup());
                populateLabel();
                break;
                
            }
        }
    }

public void populateLabel(){
        int count = -1;
        for(AppointmentDetails appointment : ecosystem.getAppointmentDirectory().getAppointmentDirectory())
        {
            if(appointment.isisappointmentTaken() == false)
            {
                count++;
            }
        }
        lblPatientsWaiting.setText(String.valueOf(count));
    }

public boolean isBloodRequired()
    {
         boolean output=false;
//        if(RadioBloodYes.isSelected())
//        {
//            return true;
//        }
//        else if(RadioBloodNo.isSelected())
//        {
//            return false;
//        }
        
         output=RadioBloodYes.isSelected()?true:false;
         output=RadioBloodNo.isSelected()?false:true;
         
        return output;
        
    }

public boolean isDonationRequired()
    {
        boolean output=false;
//        if(yesDonationRadioButton.isSelected())
//        {
//            return true;
//        }
//        else if(noDonationRadioButton.isSelected())
//        {
//            return false;
//        }
//        
//        return false;

         output=RadioFundsYes.isSelected()?true:false;
         output=RadioFundsNo.isSelected()?false:true;
         
        return output;
    }

public void resetFields(){
    txtPatientName.setText("");
        txtDOB.setText("");
        txtBloodGroup.setText("");
        txtDisease.setText("");
        txtPrescription.setText("");
}
}
